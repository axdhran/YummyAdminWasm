@page "/categoriaProducto/detalle/{id:int}"

@using YummyAdmindWasm.Models
@using MudBlazor

@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject ILocalStorageService _localStorageService

<MudText Typo="Typo.h2" Class="ml">Detalles de la Categoria Producto</MudText>

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <EditForm Model="categoriaProducto">
                <DataAnnotationsValidator />
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Nombre" @bind-Value="categoriaProducto.nombre" For="@(() => categoriaProducto.nombre)" />
                        
                        <MudTextField Label="CategorÃ­a Global" @bind-Value="comercio.nombre" For="@(() => comercio.nombre)"></MudTextField>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Href="@($"/categoriaProducto/index")" Variant="Variant.Filled" Color="Color.Info"
                                   Class="text-center">Regresar</MudButton>
                    </MudCardActions>
                </MudCard>
            </EditForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public int id { get; set; }
    private CategoriaProducto categoriaProducto = new CategoriaProducto();
    private Comercio comercio = new Comercio();


    protected override async Task OnInitializedAsync()
    {
        httpClient.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", await _localStorageService.GetItemAsync<string>("token"));
        await getProyecto();

        comercio = categoriaProducto.comercio;
    }

    private async Task getProyecto()
    {
        var resp = await httpClient.GetStringAsync("categoriaProductos/" + id);
        categoriaProducto = JsonSerializer.Deserialize<CategoriaProducto>(resp, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }
}