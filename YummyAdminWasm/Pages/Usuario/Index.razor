@page "/usuario/index"

@using MudBlazor
@using YummyAdmindWasm.Models

@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject ILocalStorageService _localStorageService

<MudText Typo="Typo.h2" Class="ml">Usuarios</MudText>

<MudTable Items="@usuarios" Hover="true" Bordered="true" Striped="true">
    <ToolBarContent>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="goAdd" />
        <MudSpacer />
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Nombre</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Telefono</MudTh>
        <MudTh>Acciones</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
        <MudTd DataLabel="Email">@context.Login</MudTd>
        <MudTd DataLabel="Rol">@context.Telefono</MudTd> <!-- Mostrar el nombre del rol -->
        <MudTd>
            <MudButton Href="@($"/usuario/detalle/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Info"
                       Class="text-center">Detalle</MudButton>
            <MudButton Href="@($"/usuario/editar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Tertiary"
                       Class="text-center">Editar</MudButton>
            <MudButton Href="@($"/usuario/eliminar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Warning"
                       Class="text-center">Eliminar</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private IEnumerable<Usuario>? usuarios = new List<Usuario>(); // Cambiado a UsuarioSalida

    protected override async Task OnInitializedAsync()
    {
        httpClient.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", await _localStorageService.GetItemAsync<string>("token"));

        await getAll();
    }

    private async Task getAll()
    {
        var httpResponse = await httpClient.GetStringAsync("auth/usuarios/lista"); // Endpoint Java

        usuarios = JsonSerializer.Deserialize<IEnumerable<Usuario>>(httpResponse, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }

    private void goAdd()
    {
        navigationManager.NavigateTo("usuario/agregar");
    }
}
